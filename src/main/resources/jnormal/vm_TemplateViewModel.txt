package $ClassPackageName;

import android.app.Application;

import androidx.annotation.NonNull;
import androidx.lifecycle.MutableLiveData;

import com.srwing.b_applib.coreui.BaseViewModel;
import com.srwing.t_network.base.BaseDataSource;

import com.blankj.utilcode.util.ToastUtils;

import $VM_MPackageName.$ClassPrefixEntity;
import $VM_MPackageName.$ClassPrefixRepository;

public class $ClassPrefixViewModel extends BaseViewModel {

     private $ClassPrefixRepository repository;

     private MutableLiveData<$ClassPrefixEntity.DataBean> liveData = new MutableLiveData<>();

     public MutableLiveData<$ClassPrefixEntity.DataBean> getLiveData() {
            return liveData;
      }

    public $ClassPrefixViewModel(@NonNull Application application) {
        super(application);
        repository = new $ClassPrefixRepository();
    }

    public void get$MethodName() {
        repository.get$MethodName(new BaseDataSource.GetTaskCallback<$ClassPrefixEntity>(){
               @Override
               public void onTaskLoaded($ClassPrefixEntity task) {
                   if (task.status.code == 0 && task.data != null && !task.data.isEmpty()) {
                       liveData.setValue(task.data.get(0));
                   }
               }
               @Override
               public void onDataNotAvailable(int code, String desc) {
                   ToastUtils.showShort(desc);
               }
        });
     }

}
