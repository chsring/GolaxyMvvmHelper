package plugin.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import plugin.action.ConfigReadyListener;
import plugin.action.TypeContant;

import javax.annotation.Nonnull;
import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class SettingDialog extends JFrame {

    private JPanel contentPane;
    private JButton cancelButton;
    private JButton okButton;
    private JRadioButton javaRB;
    private JRadioButton kotlinRB;
    private JRadioButton normalRB;
    private JRadioButton listRB;
    private JRadioButton pagingRB;
    private JTextField packNameField;
    private JTextField classPrefixField;
    private JRadioButton activityRB;
    private JRadioButton fragmentRB;


    public SettingDialog(@Nonnull ConfigReadyListener listener) {
        setContentPane(contentPane);
        setSize(450, 390);
        setResizable(false);
        setLocationRelativeTo(null);
        getRootPane().setDefaultButton(okButton);
        setTitle("FY Setting");
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                dispose();
            }
        });
        okButton.addActionListener(e -> {
            int type = 0;
            if (javaRB.isSelected()) {
                if (normalRB.isSelected()) {
                    if (activityRB.isSelected()) {
                        type = TypeContant.JAVA_NORMAL_ACTIVITY;
                    } else {
                        type = TypeContant.JAVA_NORMAL_FRAGMENT;
                    }
                } else if (listRB.isSelected()) {
                    if (activityRB.isSelected()) {
                        type = TypeContant.JAVA_LIST_ACTIVITY;
                    } else {
                        type = TypeContant.JAVA_LIST_FRAGMENT;
                    }
                } else if (pagingRB.isSelected()) {
                    if (activityRB.isSelected()) {
                        type = TypeContant.JAVA_PAGING_ACTIVITY;
                    } else {
                        type = TypeContant.JAVA_PAGING_FRAGMENT;
                    }
                }
            } else {
                if (normalRB.isSelected()) {
                    if (activityRB.isSelected()) {
                        type = TypeContant.KOTLIN_NORMAL_ACTIVITY;
                    } else {
                        type = TypeContant.KOTLIN_NORMAL_FRAGMENT;
                    }
                } else if (listRB.isSelected()) {
                    if (activityRB.isSelected()) {
                        type = TypeContant.KOTLIN_LIST_ACTIVITY;
                    } else {
                        type = TypeContant.KOTLIN_LIST_FRAGMENT;
                    }
                } else if (pagingRB.isSelected()) {
                    if (activityRB.isSelected()) {
                        type = TypeContant.KOTLIN_PAGING_ACTIVITY;
                    } else {
                        type = TypeContant.KOTLIN_PAGING_FRAGMENT;
                    }
                }
            }
            String createPackName = packNameField.getText();
            if (createPackName == null || createPackName.trim().equals("")) {
                return;
            }
            String classPrefix = classPrefixField.getText();
            if (classPrefix == null || classPrefix.trim().equals("")) {
                return;
            }
            dispose();
            listener.onConfig(createPackName, classPrefix, type);

        });
        cancelButton.addActionListener(e -> dispose());
    }

    public static void main(String[] args) {
        SettingDialog settingDialog = new SettingDialog(null);
        settingDialog.setVisible(true);
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(3, 2, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(6, 12, new Insets(0, 10, 10, 10), -1, -1));
        panel1.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Language");
        panel2.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel2.add(panel3, new GridConstraints(1, 0, 1, 12, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, new Dimension(-1, 50), 0, true));
        javaRB = new JRadioButton();
        javaRB.setSelected(true);
        javaRB.setText("java   ");
        panel3.add(javaRB);
        kotlinRB = new JRadioButton();
        kotlinRB.setEnabled(true);
        kotlinRB.setHorizontalAlignment(0);
        kotlinRB.setHorizontalTextPosition(4);
        kotlinRB.setSelected(false);
        kotlinRB.setText("kotlin");
        kotlinRB.setVerticalAlignment(0);
        kotlinRB.setVerticalTextPosition(0);
        panel3.add(kotlinRB);
        final JLabel label2 = new JLabel();
        label2.setText("Template");
        panel2.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel2.add(panel4, new GridConstraints(3, 0, 1, 12, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, new Dimension(-1, 50), 0, true));
        normalRB = new JRadioButton();
        normalRB.setEnabled(true);
        normalRB.setSelected(true);
        normalRB.setText("normal     ");
        panel4.add(normalRB);
        listRB = new JRadioButton();
        listRB.setEnabled(true);
        listRB.setSelected(false);
        listRB.setText("list     ");
        panel4.add(listRB);
        pagingRB = new JRadioButton();
        pagingRB.setSelected(false);
        pagingRB.setText("paging");
        panel4.add(pagingRB);
        final JLabel label3 = new JLabel();
        label3.setText("Type");
        panel2.add(label3, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel2.add(panel5, new GridConstraints(5, 0, 1, 12, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, new Dimension(-1, 50), 0, true));
        activityRB = new JRadioButton();
        activityRB.setSelected(true);
        activityRB.setText("activity  ");
        panel5.add(activityRB);
        fragmentRB = new JRadioButton();
        fragmentRB.setEnabled(true);
        fragmentRB.setHorizontalAlignment(0);
        fragmentRB.setHorizontalTextPosition(4);
        fragmentRB.setSelected(false);
        fragmentRB.setText("fragment");
        fragmentRB.setVerticalAlignment(0);
        fragmentRB.setVerticalTextPosition(0);
        panel5.add(fragmentRB);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new GridLayoutManager(1, 2, new Insets(10, 10, 10, 10), -1, -1));
        panel1.add(panel6, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("PackName ");
        panel6.add(label4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        packNameField = new JTextField();
        packNameField.setToolTipText("");
        panel6.add(packNameField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new GridLayoutManager(1, 2, new Insets(10, 10, 10, 10), -1, -1));
        panel1.add(panel7, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("ClassPrefix ");
        panel7.add(label5, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        classPrefixField = new JTextField();
        panel7.add(classPrefixField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JSeparator separator1 = new JSeparator();
        panel1.add(separator1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new BorderLayout(0, 0));
        contentPane.add(panel8, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_NORTHEAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
        okButton = new JButton();
        okButton.setText("OK");
        panel8.add(okButton, BorderLayout.WEST);
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel8.add(panel9, BorderLayout.CENTER);
        cancelButton = new JButton();
        cancelButton.setText("Cancel");
        panel9.add(cancelButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(normalRB);
        buttonGroup.add(listRB);
        buttonGroup.add(pagingRB);
        buttonGroup = new ButtonGroup();
        buttonGroup.add(javaRB);
        buttonGroup.add(kotlinRB);
        buttonGroup = new ButtonGroup();
        buttonGroup.add(activityRB);
        buttonGroup.add(fragmentRB);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
